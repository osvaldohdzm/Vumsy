import 'package:web_app/models/scope.dart';
import 'package:web_app/models/vulnerability.dart';

class VulnerabilityReport {
  final String id;
  final String templateName;
  final String analysisId;
  final String analysisRevision_01;
  final String analysisVersion;
  final String analysisVersionFormat01;
  final String analysisVersionFormat02;
  final String nameApp;
  final String appUrl;
  final String requestFolio;
  final String requestDateFormat01;
  final String requestDateFormat02;
  final String startDatePlanned;
  final String dueDate;
  final String startDate;
  final String finishDate;
  final String dateFormat01;
  final String dateFormat02;
  final String noTargets;
  final String reporter01;
  final String responsible01;
  final String responsibleCharge01;
  final String reviewer01;
  final List<Scope> scope;
  final List<String> qaVulnerabilities;
  final List<String> badPracticesList;
  final List<Vulnerability> vulnerabilities;

  VulnerabilityReport({
    required this.id,
    required this.analysisId,
    required this.templateName,
    required this.analysisRevision_01,
    required this.analysisVersion,
    required this.analysisVersionFormat01,
    required this.analysisVersionFormat02,
    required this.nameApp,
    required this.appUrl,
    required this.requestFolio,
    required this.requestDateFormat01,
    required this.requestDateFormat02,
    required this.startDatePlanned,
    required this.dueDate,
    required this.startDate,
    required this.finishDate,
    required this.dateFormat01,
    required this.dateFormat02,
    required this.noTargets,
    required this.reporter01,
    required this.responsible01,
    required this.responsibleCharge01,
    required this.reviewer01,
    required this.scope,
    required this.qaVulnerabilities,
    required this.badPracticesList,
    required this.vulnerabilities,
  });

  VulnerabilityReport.fromJson(Map<String, dynamic> json)
      : id = json['id'],
        analysisId = json['analysisId'],
        templateName = json['templateName'],
        analysisRevision_01 = json['analysisRevision_01'],
        analysisVersion = json['analysisVersion'],
        analysisVersionFormat01 = json['analysisVersionFormat01'],
        analysisVersionFormat02 = json['analysisVersionFormat02'],
        nameApp = json['nameApp'],
        appUrl = json['appUrl'],
        requestFolio = json['requestFolio'],
        requestDateFormat01 = json['requestDateFormat01'],
        requestDateFormat02 = json['requestDateFormat02'],
        startDatePlanned = json['startDatePlanned'],
        dueDate = json['dueDate'],
        startDate = json['startDate'],
        finishDate = json['finishDate'],
        dateFormat01 = json['dateFormat01'],
        dateFormat02 = json['dateFormat02'],
        noTargets = json['noTargets'],
        reporter01 = json['reporter01'],
        responsible01 = json['responsible01'],
        responsibleCharge01 = json['responsibleCharge01'],
        reviewer01 = json['reviewer01'],
        scope = json['scope'],
        qaVulnerabilities = json['qaVulnerabilities'],
        badPracticesList = json['badPracticesList'],
        vulnerabilities = json['vulnerabilities'];

  Map<String, dynamic> toJson() => {
        'id': id,
        '<<analysis_id>>': analysisId,
        '<<template_name>>': templateName,
        '<<analysis_revision_01>>"': analysisRevision_01,
        '<<analysis_version>>': analysisVersion,
        '<<analysis_version_format_01>>': analysisVersionFormat01,
        '<<analysis_version_format_02>>': analysisVersionFormat02,
        '<<name_app>>': nameApp,
        '<<app_url>>': appUrl,
        '<<request_folio>>': requestFolio,
        '<<request_date_format_01>>': requestDateFormat01,
        '<<request_date_format_02>>': requestDateFormat02,
        '<<start_date_planned>>': startDatePlanned,
        '<<due_date>>': dueDate,
        '<<start_date>>': startDate,
        '<<finish_date>>': finishDate,
        '<<date_format_01>>': dateFormat01,
        '<<date_format_02>>': dateFormat02,
        '<<no_targets>>': noTargets,
        '<<reporter_01>>': reporter01,
        '<<responsible_01>>': responsible01,
        '<<responsible_charge_01>>': responsibleCharge01,
        '<<reviewer_01>>': reviewer01,
        '<<scope>>"': scope,
        '<<qa_vulnerabilities>>': qaVulnerabilities,
        '<<bad_practices_list>>': badPracticesList,
        '<<vulnerabilities>>': vulnerabilities
      };
}
